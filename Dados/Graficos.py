import streamlit as st
import pandas as pd
from streamlit_option_menu import option_menu

st.set_page_config(page_title="Comparativo de √înibus El√©tricos SP x NY", layout="centered")

st.title("üöç Comparativo: √înibus El√©tricos em S√£o Paulo vs Nova York")

st.markdown("""
### Introdu√ß√£o
Este painel compara os investimentos, crescimento da frota de √¥nibus el√©tricos, redu√ß√£o de CO‚ÇÇ e o impacto populacional nas cidades de **S√£o Paulo** e **Nova York**.
""")

# MENU LATERAL
with st.sidebar:
    selecionado = option_menu(
        menu_title='Menu',
        options=['Historia', 'Frotas', 'Emissao de CO2'],
        default_index=0
    )

# ABA 1 - HIST√ìRIA
def historia():
    st.title('Hist√≥ria')
    
    with st.container():
        st.header("Popula√ß√£o das Cidades")
        populacao = {
            "Cidade": ["S√£o Paulo", "Nova York"],
            "Popula√ß√£o": [11895578, 8478000]
        }
        df_populacao = pd.DataFrame(populacao).set_index("Cidade")
        st.bar_chart(df_populacao)

# ABA 2 - FROTAS
def frotas():
    st.title('Frotas')        
    
    with st.container():
        st.header("Investimento Hist√≥rico em √înibus El√©tricos (2015-2025)")
        investimento = {
            "Ano": list(range(2015, 2026)),
            "S√£o Paulo": [5, 10, 15, 25, 30, 40, 50, 90, 120, 280, 350],
            "Nova York": [3, 8, 12, 20, 28, 35, 45, 85, 100, 310, 370]
        }
        df_investimento = pd.DataFrame(investimento).set_index("Ano")
        st.bar_chart(df_investimento)

    with st.container():
        st.header("Frota El√©trica Atual de √înibus (2025)")
        frota_atual = {
            "Cidade": ["S√£o Paulo", "Nova York"],
            "Quantidade de √înibus El√©tricos": [789, 265]
        }
        df_frota = pd.DataFrame(frota_atual).set_index("Cidade")
        st.bar_chart(df_frota)

    with st.container():
        st.header("Crescimento da Frota El√©trica (2015-2025)")
        crescimento = {
            "Ano": list(range(2015, 2026)),
            "S√£o Paulo": [10, 15, 20, 25, 40, 60, 100, 200, 400, 600, 789],
            "Nova York": [5, 8, 10, 15, 30, 50, 80, 120, 180, 220, 265]
        }
        df_crescimento = pd.DataFrame(crescimento).set_index("Ano")
        st.line_chart(df_crescimento)

# ABA 3 - EMISS√ÉO DE CO2
def CO():
    st.title("Emiss√µes de CO2")
    
    with st.container():
        st.header("Emiss√µes Anuais de CO‚ÇÇ Evitadas (ton)")
        emissoes = {
            "Cidade": ["S√£o Paulo", "Nova York"],
            "Emiss√µes Evitadas": [41300, 90000] 
        }
        df_emissoes = pd.DataFrame(emissoes).set_index("Cidade")
        st.bar_chart(df_emissoes)

    with st.container():
        st.header("Compara√ß√£o: √înibus El√©trico vs Diesel")

        dados_comparacao = {
            "Aspecto": [
                "Emiss√£o Anual de CO‚ÇÇ (ton)", 
                "Custo de Manuten√ß√£o", 
                "Custo de Combust√≠vel", 
                "Ru√≠do", 
                "Efici√™ncia Energ√©tica (%)", 
                "Vida √ötil (anos)"
            ],
            "√înibus El√©trico": [
                0, 
                "Menor", 
                "Mais barato", 
                "Muito baixo", 
                85, 
                10
            ],
            "√înibus Diesel": [
                900, 
                "Maior", 
                "Mais caro", 
                "Alto", 
                35, 
                8
            ]
        }
        df_comparacao = pd.DataFrame(dados_comparacao).set_index("Aspecto")
        st.table(df_comparacao)

        st.subheader("Emiss√µes Anuais de CO‚ÇÇ por Tipo de √înibus")
        df_emissao_ind = pd.DataFrame({
            "Tipo de √înibus": ["El√©trico", "Diesel"],
            "Emiss√£o Anual de CO‚ÇÇ (ton)": [0, 900]
        }).set_index("Tipo de √înibus")
        st.bar_chart(df_emissao_ind)


if selecionado == "Historia":
    historia()
elif selecionado == "Frotas":
    frotas()
elif selecionado == "Emissao de CO2":
    CO()
